@page "/counter"



@inject ILocalStorageService localStorage
@attribute [Authorize]
@*@attribute [Authorize(Roles = "Admin")]*@
@*@attribute [Authorize(Roles = "Iron Man")]*@
@*@attribute [Authorize(Policy = Policies.IsAdmin)]*@


<PageTitle>Counter</PageTitle>

@*
<img src="https://drive.google.com/uc?export=view&id=1WwuO5AJccTorEo__wBU3jC3SJIu7izhc" alt="Kriu" style="width: 100%;">
*@
<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<button class="btn btn-primary" @onclick="GetCount">Get Count</button>

<p></p>

<h3>@Jwt</h3>

<button class="btn btn-primary" @onclick="ShowModal">Dialow window test</button>

@*<AuthorizeView>*@
<AuthorizeView Roles="Admin">
    <Authorized>
        <span>You are authorized as @context.User.Identity.Name</span>
    </Authorized>
    <NotAuthorized>
        <span>You are not authorized to know more.</span>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter] IModalService Modal { get; set; }

    private int currentCount = 0;
    string Jwt = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var token = await localStorage.GetItemAsync<string>("token");
        var jwt = new JwtSecurityTokenHandler().ReadJwtToken(token);
        string userId = jwt.Claims.First(c => c.Type == "id").Value;
        Jwt = userId;
    }

    private async Task IncrementCount()
    {
        currentCount++;
        await localStorage.SetItemAsync("count", currentCount);
    }

    private async Task GetCount()
    {
        var localStorageCount = await localStorage.GetItemAsync<string>("count");
        Console.WriteLine($"Current Count = {localStorageCount}");
    }

    async Task ShowModal()
    {
        var confirmModal = Modal.Show<ConfirmationDialog>("Do Something?");

        var modalResult = await confirmModal.Result;

        if (modalResult.Cancelled == false)
        {
            Jwt = "Continued";
        }
        else
        {
            Jwt = "Canceled";
        }
    }
}
